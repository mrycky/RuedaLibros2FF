/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vistas;

import com.mycompany.ruedalibros2.DAOBooksImpl;
import com.mycompany.ruedalibros2.DAOPrestamosImpl;
import com.mycompany.ruedalibros2.DAOUsersImpl;
import interfaces.DAOLibros;
import interfaces.DAOPrestamos;
import interfaces.DAOUsers;
import Utils.Utils;
import java.awt.Color;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Usuario
 */
public class Devoluciones extends javax.swing.JPanel {
    private final int MAX_DAYS_RETURN = 5;
    private final int COST_DAY_SANC = 10;
    /**
     * Creates new form Devoluciones
     */
    public Devoluciones() {
        initComponents();
        CargarDevolucion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtLibro = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnDevolver = new javax.swing.JButton();
        btnBuscarUser = new javax.swing.JButton();
        btnBuscarLibro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablePrestamo = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Devoluciones");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 21, 120, 40));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 10, 322));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Usuario:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Libro:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, -1, -1));
        jPanel1.add(txtLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 170, 33));

        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });
        jPanel1.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 170, 33));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caja-de-devolucion-de-libros.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 130, 231));

        btnDevolver.setBackground(new java.awt.Color(51, 102, 255));
        btnDevolver.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDevolver.setForeground(new java.awt.Color(255, 255, 255));
        btnDevolver.setText("Devolver");
        btnDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverActionPerformed(evt);
            }
        });
        jPanel1.add(btnDevolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 360, 200, 50));

        btnBuscarUser.setBackground(new java.awt.Color(102, 102, 255));
        btnBuscarUser.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarUser.setText("Buscar");
        btnBuscarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarUserActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscarUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, -1, -1));

        btnBuscarLibro.setBackground(new java.awt.Color(102, 102, 255));
        btnBuscarLibro.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarLibro.setText("Buscar");
        btnBuscarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarLibroActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscarLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 240, -1, -1));

        TablePrestamo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Nombre", "Nombre", "ID Libro", "Libro", "Fecha Salida"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablePrestamo);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 370, 220));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void CargarDevolucion(){
         /*try{
           DAOPrestamos dao = new DAOPrestamosImpl(); 
           DefaultTableModel model = (DefaultTableModel) TablePrestamo.getModel(); 
           model.setRowCount(0);         
           //dao.listar("").forEach((u) -> model.addRow(new Object[] {u.getId_usuario(), u.getId_libro(), u.getFecha_salida()}));       
        }catch(Exception e){
            System.out.println(e.getMessage());
        }*/
    
    }
    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioActionPerformed
        // TODO add your handling ctxtUsuario:
    }//GEN-LAST:event_txtUsuarioActionPerformed

    private void btnDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverActionPerformed
        String folio = txtUsuario.getText();
        String bookId = txtLibro.getText();

        // Validaciones para los campos
        if (folio.isEmpty() || bookId.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Debe llenar todos los campos. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            txtUsuario.requestFocus();
            return;
        } else if (!Utils.isNumeric(folio) || !Utils.isNumeric(bookId)) {
            javax.swing.JOptionPane.showMessageDialog(this, "Los campos Folio y el ID del libro deben ser números enteros. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            txtUsuario.requestFocus();
            return;
        } else if (Integer.parseInt(folio) <= 0 || Integer.parseInt(bookId) <= 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Los campos Folio y el ID del libro deben ser mayor que 0. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            txtUsuario.requestFocus();
            return;
        }

        try {
            DAOUsers daoUsers = new DAOUsersImpl();
            
            // Validamos existencia del usuario
            modelos.usuarios currentUser = daoUsers.getusuariobById(Integer.parseInt(folio));
            if (currentUser == null) {
                javax.swing.JOptionPane.showMessageDialog(this, "No se encontró ningún usuario con ese folio. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                txtUsuario.requestFocus();
                return;
            }
            
            DAOLibros daoBooks = new DAOBooksImpl();
            
            // Validamos existencia del libro
            modelos.Libros currentBook = daoBooks.getBookById(Integer.parseInt(bookId));
            if (currentBook == null){
                javax.swing.JOptionPane.showMessageDialog(this, "No se encontró ningún libro con ese ID. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                txtLibro.requestFocus();
                return;
            }
            
            DAOPrestamos daoLendings= new DAOPrestamosImpl();
            
            // Validamos que el usuario tenga ese libro prestado.
            modelos.Prestamo currentLending = daoLendings.getLending(currentUser, currentBook);
            if (currentLending == null) {
                javax.swing.JOptionPane.showMessageDialog(this, "No se ha podido encontrar el préstamo correspiendote a los datos ingresados. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                txtLibro.requestFocus();
                return;
            }

            // Todo OK: Devolvemos libro.
            currentLending.setFecha_regreso(Utils.getFechaActual());
            daoLendings.modificar(currentLending);
            
            // Modificamos el libro sumandole 1 en disponibilidad.
            currentBook.setDisponible(currentBook.getDisponible() + 1);
            daoBooks.modificar(currentBook);
            
            javax.swing.JOptionPane.showMessageDialog(this, "Libro ID: " + currentBook.getId() + " devuelto exitosamente por " + currentUser.getNombre() + ".\n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            txtUsuario.setText("");
            txtLibro.setText("");
            
            // Verificamos sanciones
            int days = Utils.diferenciasDeFechas(Utils.stringToDate(currentLending.getFecha_salida()), new Date());
            if (days > MAX_DAYS_RETURN) {
                int daysDelayed = days - MAX_DAYS_RETURN;
                int sancMoney = daysDelayed * COST_DAY_SANC;
                
                // Aumentamos sanción del usuario y en dinero.
                currentUser.setSancion(currentUser.getSancion() + 1);
                currentUser.setSancion_dinero(currentUser.getSancion_dinero() + sancMoney);
                daoUsers.sancionar(currentUser);
                javax.swing.JOptionPane.showMessageDialog(this, "¡USUARIO SANCIONADO POR ENTREGA A DESTIEMPO! ($" + sancMoney + ") \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error al prestar el libro. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnDevolverActionPerformed

    private void btnBuscarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarUserActionPerformed
       /* try {
            DAOUsers dao = new DAOUsersImpl();
            DefaultTableModel model = (DefaultTableModel) TableUsers.getModel();
            model.setRowCount(0);
            dao.listar(txtUsuario.getText()).forEach((u) -> model.addRow(new Object[] {u.getId(),u.getNombre(), u.getApellido1(),
                u.getApellido2()}));
    }catch (Exception e) {
        System.out.println(e.getMessage());
        }*/
    }//GEN-LAST:event_btnBuscarUserActionPerformed

    private void btnBuscarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarLibroActionPerformed
        /*try {
            DAOLibros dao = new DAOBooksImpl();
            DefaultTableModel model = (DefaultTableModel) TableBooks.getModel();
            model.setRowCount(0);
            dao.listar(txtLibro.getText()).forEach((u) -> model.addRow(new Object[]{u.getId(), u.getTitulo(), u.getAutor(),
                u.getCategoria()}));
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }*/
    }//GEN-LAST:event_btnBuscarLibroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablePrestamo;
    private javax.swing.JButton btnBuscarLibro;
    private javax.swing.JButton btnBuscarUser;
    private javax.swing.JButton btnDevolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtLibro;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
